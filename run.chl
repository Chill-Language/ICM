; Test 01
(println "----------1----------")
(let a "Hello ")
(let b "World!")
(println (+ a b)) ; Hello World!

; Test 02
(println "----------2----------")
(let c [9 8 7 6 5 4 3 2 1 0])
(println c) ; [9 8 7 6 5 4 3 2 1 0]
(sort c)
(println c) ; [0 1 2 3 4 5 6 7 8 9]

; Test 03
(println "----------3----------")
(let d [9/5 8/8 7/8 67/2 5/10 4/1 3/2 2/5 1/7 0/5])
(println d) ; [9/5 1 7/8 67/2 1/2 4 3/2 2/5 1/7 0]
(sort d)
(println d) ; [0 1/7 2/5 1/2 7/8 1 3/2 9/5 4 67/2]

; Test 04
(println "----------4----------")
(let e [5 1 3])
(let f e)
(cpy g e)
(sort e)
(println f)              ; [1 3 5]
(println g)              ; [5 1 3]
(let e [5 1 3])
(println e)              ; [5 1 3]
(println (sort (cpy e))) ; [1 3 5]
(println e)              ; [5 1 3]

; Test 05
(println "----------5----------")
(let e (list 1 2 3))
(println e)        ; [1 2 3]
(println (disp e)) ; 123

; Test 06
(println "----------6----------")
(let a 5)
(let b 6)
(let c [a b])
(println (+ (disp c))) ; 11
(let e [f 7])
(let (disp e))
(println f)            ; 7

; Test 07
(println "----------7----------")
(let add +)
(println add)                  ; F(+)
(println (add 5 6))            ; 11
(let a [9 5 7])
(println (sort (cpy a)))       ; [5 7 9]
(println (sort (cpy a) <))     ; [5 7 9]
(println (sort (cpy a) >))     ; [9 7 5]
(println (sort (cpy a) +))     ; Error
(let small <)
(println (sort (cpy a) small)) ; [5 7 9]

; Test 08
(println "----------8----------")
(println (call (disp [+]) 5 6)) ; 11
(println (call (disp [+ 5 6]))) ; 11
